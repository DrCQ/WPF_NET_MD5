<Window x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:matD="http://materialdesigninxaml.net/winfx/xaml/themes"  
        xmlns:System="clr-namespace:System;assembly=System.Runtime"
        xmlns:local="clr-namespace:WPF_NET_MD5"
        xmlns:vi="clr-namespace:WPF_NET_MD5.View"
        Title="Material Design 5.0 - NET8.0" 
        DataContext="{Binding MainWindowVM, Source={StaticResource Locator}}"
        d:DataContext="{Binding MainWindowVM, Source={StaticResource Locator}}"
        mc:Ignorable="d" d:Height="250" d:Width="800">
    
    <Window.Resources>
        
        <!--#region Window Control Buttons: Minimize, Mximize, Close -->

        <!-- WndMinButtonStyle -->
        <Style x:Key="WndMinButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WndButtonStyle}">
            <Setter Property="Content" Value="{matD:PackIcon Kind=WindowMinimize}"/>
            <Setter Property="ToolTip" Value="Minimize Window"/>
            <Setter Property="Command" Value="{Binding MainWindowVM.WindowMinimizeCommand, Source={StaticResource Locator}}"/>
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        </Style>

        <!-- WndMaxButtonStyle -->
        <Style x:Key="WndMaxButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WndButtonStyle}">
            <Setter Property="Content" Value="{matD:PackIcon Kind=WindowMaximize}"/>
            <Setter Property="ToolTip" Value="Maximize Window"/>
            <Setter Property="Command" Value="{Binding MainWindowVM.WindowMaximizeCommand, Source={StaticResource Locator}}"/>
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="Maximized">
                    <Setter Property="Content" Value="{matD:PackIcon Kind=WindowRestore}"/>
                    <Setter Property="ToolTip" Value="Restore Window"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- WndCloseButtonStyle -->
        <Style x:Key="WndCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource WndButtonStyle}">
            <Setter Property="Content" Value="{matD:PackIcon Kind=WindowClose}"/>
            <Setter Property="ToolTip" Value="Close Window"/>
            <Setter Property="Command" Value="{Binding MainWindowVM.WindowCloseCommand, Source={StaticResource Locator}}"/>
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--#endregion -->

        <!--#region  Window Chrome Constants: Heigh, Radius, BorderThickness, ResizeBorderThickness -->
        
        <System:Double x:Key="ChromeCaptionHeightValue">42</System:Double>
        <CornerRadius x:Key="ChromeCornerRadiusValue">4</CornerRadius>
        <Thickness x:Key="ChromeBorderThicknessValue">3,42,3,3</Thickness>
        <Thickness x:Key="ChromeResizeBorderThicknessValue">5,5,5,5</Thickness>
        
        <!--#endregion -->

        <!-- MainWindowMenu -->
        <x:Array x:Key="MainWindowMenu" Type="MenuItem" >
            <MenuItem Header="File">
                <MenuItem Header="Import Images" Command="{Binding MainWindowVM.Test1NotificationCommand, Source={StaticResource Locator}}"/>
                <MenuItem Header="Export Images" Command="{Binding MainWindowVM.Test2NotificationCommand, Source={StaticResource Locator}}"/>
                <Separator/>
                <MenuItem Header="Exit App" Icon="{matD:PackIcon Kind=ExitToApp}" Command="{Binding MainWindowVM.WindowCloseCommand, Source={StaticResource Locator}}"
                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
            </MenuItem>
            <MenuItem Header="Info">
                <MenuItem Header="About" Icon="{matD:PackIcon Kind=Info}" Command="{Binding MainWindowVM.ShowAboutDialogCommand, Source={StaticResource Locator}}" />
            </MenuItem>

        </x:Array>
        
    </Window.Resources>
    
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Resources>

            </Style.Resources>
            <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
            <Setter Property="FontFamily" Value="{matD:MaterialDesignFont}"/>
            <Setter Property="TextElement.FontSize" Value="14" />
            <Setter Property="TextElement.FontWeight" Value="Regular" />
            <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesign.Brush.Foreground}" />
            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
            <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="{StaticResource ChromeCaptionHeightValue}" CornerRadius="{DynamicResource ChromeCornerRadiusValue}" 
                                  GlassFrameThickness="0" NonClientFrameEdges="None" ResizeBorderThickness="{DynamicResource ChromeResizeBorderThicknessValue}" 
                                  UseAeroCaptionButtons="False"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <!-- Specify the look and feel of the top-line  -->
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="{StaticResource ChromeBorderThicknessValue}">
                                <AdornerDecorator>
                                    <ContentPresenter/>
                                </AdornerDecorator>
                            </Border>
                            <!-- overlay Grid for the top-line -->
                            <Grid VerticalAlignment="Top" Background="{TemplateBinding Background}" Height="{StaticResource ChromeCaptionHeightValue}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Menu Grid.Column="0" ItemsSource="{StaticResource MainWindowMenu}" Height="{StaticResource ChromeCaptionHeightValue}" Margin="4,4,0,4"  
                                      IsEnabled="{Binding AppDataService.IsNotModal, Source={StaticResource Locator}}"
                                      WindowChrome.IsHitTestVisibleInChrome="True" matD:MenuAssist.TopLevelMenuItemHeight="36"/>
                                <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="4,6,4,4" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" >
                                    <Button Style="{DynamicResource WndMinButtonStyle}" />
                                    <Button Style="{DynamicResource WndMaxButtonStyle}" />
                                    <Button Style="{DynamicResource WndCloseButtonStyle}"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto" MinHeight="32"/>
            </Grid.RowDefinitions>

            <matD:ColorZone Grid.Row="0" Mode="Inverted" Padding="4,6" VerticalAlignment="Bottom">
                <DockPanel LastChildFill="True">
                <matD:PopupBox DockPanel.Dock="Right" StaysOpen="False" IsEnabled="{Binding DataService.IsNotModal, Mode=OneWay}" Padding="3">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource MaterialDesignDivider}">
                            <TextBlock Text="Theme" Style="{DynamicResource MaterialDesignSubtitle1TextBlock}" HorizontalAlignment="Center" Margin="0,15"/>
                        </Border>
                        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="15">
                            <TextBlock Text="Light" ToolTip="Light Mode" Margin="10,0"/>
                            <ToggleButton IsChecked="{Binding IsDarkMode, Mode=TwoWay}"/>
                            <TextBlock Text="Dark" ToolTip="Dark Mode" Margin="10,0"/>
                        </StackPanel>
                    </Grid>
                </matD:PopupBox>
                <StackPanel Orientation="Horizontal" >
                        <!-- CAUTION: the application-32.png image must have BuildAction set to Resource!!! -->
                        <Image Source="/Graphic/application-32.png" Margin="12,0" Stretch="None" ToolTip="Image View"/>
                        <TextBlock Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                               Style="{StaticResource MaterialDesignHeadline6TextBlock}" VerticalAlignment="Center" d:Text="APPLICATION TITLE" />
                    </StackPanel>
                </DockPanel>
            </matD:ColorZone>
        <vi:StatusBarView Grid.Row="2" IsTabStop="False" Focusable="False"/>

        <matD:DialogHost Grid.Row="1">
            <Grid>
                
            </Grid>
        </matD:DialogHost>
    </Grid>        

</Window>
